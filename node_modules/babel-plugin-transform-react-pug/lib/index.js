'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

exports.default = function (babel) {
  var t = babel.types;


  (0, _babelTypes.setBabelTypes)(t);

  function isReactPugReference(node) {
    // TODO: do this better
    return t.isIdentifier(node, { name: 'pug' });
  }

  return {
    visitor: {
      TaggedTemplateExpression: function TaggedTemplateExpression(path) {
        var node = path.node;
        var _node$quasi = node.quasi,
            quasis = _node$quasi.quasis,
            expressions = _node$quasi.expressions;


        if (isReactPugReference(node.tag) && quasis.length >= 1) {

          var template = void 0,
              interpolationRef = void 0;

          if (expressions.length) {
            var interpolatedTpl = (0, _interpolation.getInterpolatedTemplate)(quasis, expressions);
            template = interpolatedTpl.template;
            interpolationRef = interpolatedTpl.interpolationRef;
          } else {
            template = quasis[0].value.raw;
          }

          var src = template.split('\n');

          var minIndent = src.reduce(function (minIndent, line) {
            return line.trim().length ? Math.min(/^ */.exec(line)[0].length, minIndent) : minIndent;
          }, Infinity);

          src = src.map(function (line) {
            return line.substr(minIndent);
          }).join('\n');

          var ast = (0, _parsePug2.default)(src);
          var context = _context2.default.create(this.file, path, interpolationRef);
          var transformed = ast.nodes.map(function (node) {
            return (0, _visitors.visitExpression)(node, context);
          });
          var expression = transformed.length === 1 ? transformed[0] : t.arrayExpression(transformed);

          context.variablesToDeclare.forEach(function (id) {
            path.scope.push({ kind: 'let', id: id });
          });

          path.replaceWith(expression);
        }
      }
    }
  };
};

var _babylon = require('babylon');

var _parsePug = require('./parse-pug');

var _parsePug2 = _interopRequireDefault(_parsePug);

var _context = require('./context');

var _context2 = _interopRequireDefault(_context);

var _visitors = require('./visitors');

var _interpolation = require('./utils/interpolation');

var _babelTypes = require('./babel-types');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }